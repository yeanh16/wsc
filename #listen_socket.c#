#include <stdio.h>
#include <stdlib.h>
#include <memory.h>
#include <string.h>
#include <sys/socket.h>
#include <errno.h>
#include <unistd.h>
#include <netdb.h>
#include <netinet/in.h>
#include<arpa/inet.h> //inet_addr

void listen(){
	int client;
	struct sockaddr_in6 their_address;
	socklen_t their_address_size = sizeof (their_address)
	char buffer[INET6_ADDRSTRLEN + 32];
	char *printable;
	const char* hostname =0;/* wildcard */
	const char* portname="daytime";
	struct addrinfo hints;
	memset (&hints,0,sizeof(hints));
	hints.ai_family=AF_UNSPEC;
	hints.ai_socktype=SOCK_STREAM;
	hints.ai_protocol=0;
	hints.ai_flags=AI_PASSIVE|AI_ADDRCONFIG;
	struct addrinfo * res=0;
	int err=getaddrinfo(hostname,portname,&hints,&res);
	if (err!=0){
		die("failed to resolve local socket address (err=%d)",err)
	int (server_fd==-1) {
		die("%s",strerror(errno));
	}
}

	void create_socket(string ipAddress, short ipProtocol, short portNumber){
	  int socket_desc;
	  struct sockaddr_in server;

	  //Create socket
	  socket_desc = socket(AF_INET, SOCK_STEAM, 0);
	  if (socket_desc == -1){
	    printf("Could not create socket");
	  }
	  
	  server.sin_addr.s_addr = inet_addr(ipAddress);
	  server.sin_family = ipProtocol;
	  server.sin_port = htons(portNumber);
	  
	  while()
	}




